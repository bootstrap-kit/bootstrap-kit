// Generated by CoffeeScript 1.10.0
(function() {
  var ViewComponent, addClasses;

  addClasses = require('./util').addClasses;

  module.exports = ViewComponent = (function() {
    function ViewComponent(model, tagName) {
      this.tagName = tagName;
      this.domNode = null;
      this.subscription = null;
      this.setModel(model);
    }

    ViewComponent.prototype.createDomNode = function() {
      var e;
      if (this.tagName == null) {
        throw new Error("You have to implement createDomNode()");
      }
      e = document.createElement(this.tagName);
      e.innerHTML = this.model.getString();
      return e;
    };

    ViewComponent.prototype.updateDomNode = function() {};

    ViewComponent.prototype.getDomNode = function() {
      return this.domNode;
    };

    ViewComponent.prototype.setModel = function(model1) {
      var ref;
      this.model = model1;
      if (this.domNode != null) {
        this.updateDomNode();
      } else {
        this.domNode = this.createDomNode();
      }
      if (this.model.action != null) {
        this.domNode.addEventListener('click', this.model.action);
      }
      if (this.model.options["class"]) {
        addClasses(this.domNode, this.model.options["class"]);
      }
      this.domNode.btkViewComponent = this;
      if ((ref = this.subscription) != null) {
        ref.dispose();
      }
      this.subscribe();
      return this.domNode;
    };

    ViewComponent.prototype.subscribe = function() {
      this.subscription = new CompositeDisposable();
      return this.subscription.add(this.model.manageComponentViews(this));
    };

    return ViewComponent;

  })();

}).call(this);
