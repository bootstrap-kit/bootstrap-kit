// Generated by CoffeeScript 1.10.0
(function() {
  var Anchor, Aside, CompositeDisposable, Disposable, Emitter, Form, Glyph, Header, MenuItem, Navbar, NavbarNav, Pane, PaneItem, RestWebComponent, SidebarMenu, ViewComponent, WebComponent, addViewProvider, copyProperties, makeElement, mixin, ref, ref1, str2elem,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  require('json-editor/dist/jsoneditor.min.js');

  ref = require('event-kit'), Disposable = ref.Disposable, CompositeDisposable = ref.CompositeDisposable, Emitter = ref.Emitter;

  ref1 = require('./util'), copyProperties = ref1.copyProperties, str2elem = ref1.str2elem;

  if (!Function.prototype.mixin) {
    Function.prototype.mixin = function(mixin) {
      return copyProperties(mixin.prototype, this.prototype);
    };
  }

  mixin = function(target, source) {
    return copyProperties(source.prototype, target);
  };

  WebComponent = require('./web-component');

  RestWebComponent = require('./rest-web-component');

  ViewComponent = require('./view-component');

  addViewProvider = function(modelClass, elementFactory) {
    return WebComponent.addViewProvider(modelClass, function(component) {
      return (new elementFactory).setModel(component);
    });
  };

  Anchor = (function(superClass) {
    extend(Anchor, superClass);

    function Anchor() {
      return Anchor.__super__.constructor.apply(this, arguments);
    }

    return Anchor;

  })(WebComponent);

  addViewProvider(Anchor, require('./anchor-element'));

  Glyph = (function(superClass) {
    extend(Glyph, superClass);

    function Glyph() {
      return Glyph.__super__.constructor.apply(this, arguments);
    }

    return Glyph;

  })(WebComponent);

  addViewProvider(Glyph, require('./glyph-element'));

  Header = (function(superClass) {
    extend(Header, superClass);

    function Header() {
      return Header.__super__.constructor.apply(this, arguments);
    }

    return Header;

  })(WebComponent);

  addViewProvider(Header, require('./header-component'));

  Navbar = (function(superClass) {
    extend(Navbar, superClass);

    function Navbar() {
      return Navbar.__super__.constructor.apply(this, arguments);
    }

    return Navbar;

  })(WebComponent);

  addViewProvider(Navbar, require('./navbar-component'));

  NavbarNav = (function(superClass) {
    extend(NavbarNav, superClass);

    function NavbarNav() {
      return NavbarNav.__super__.constructor.apply(this, arguments);
    }

    return NavbarNav;

  })(WebComponent);

  addViewProvider(Navbar, require('./navbar-nav-element'));

  Pane = require('./pane');

  addViewProvider(Pane, require('./pane-element'));

  PaneItem = require('./pane-item');

  MenuItem = (function(superClass) {
    extend(MenuItem, superClass);

    function MenuItem() {
      return MenuItem.__super__.constructor.apply(this, arguments);
    }

    return MenuItem;

  })(WebComponent);

  addViewProvider(MenuItem, require('./menu-item-element'));

  SidebarMenu = (function(superClass) {
    extend(SidebarMenu, superClass);

    function SidebarMenu() {
      return SidebarMenu.__super__.constructor.apply(this, arguments);
    }

    return SidebarMenu;

  })(WebComponent);

  addViewProvider(SidebarMenu, require('./sidebar-menu-element'));

  Aside = (function(superClass) {
    extend(Aside, superClass);

    function Aside() {
      return Aside.__super__.constructor.apply(this, arguments);
    }

    return Aside;

  })(WebComponent);

  WebComponent.addViewProvider(Aside, function(object) {
    return (new ViewComponent(object, 'aside')).setModel(object);
  });

  Form = (function(superClass) {
    extend(Form, superClass);

    function Form() {
      return Form.__super__.constructor.apply(this, arguments);
    }

    return Form;

  })(WebComponent);

  addViewProvider(Form, require('./form-element'));

  makeElement = str2elem;

  module.exports = {
    Anchor: Anchor,
    Glyph: Glyph,
    Header: Header,
    Navbar: Navbar,
    NavbarNav: NavbarNav,
    Pane: Pane,
    PaneItem: PaneItem,
    MenuItem: MenuItem,
    Aside: Aside,
    SidebarMenu: SidebarMenu,
    WebComponent: WebComponent,
    ViewComponent: ViewComponent,
    addViewProvider: addViewProvider,
    RestWebComponent: RestWebComponent,
    str2elem: str2elem,
    makeElement: makeElement,
    Emitter: Emitter,
    Disposable: Disposable,
    CompositeDisposable: CompositeDisposable,
    Form: Form,
    mixin: mixin,
    addPane: function(name, pane) {
      if (this.panes == null) {
        this.panes = {};
      }
      return this.panes[name] = pane;
    },
    getPane: function(name) {
      return this.panes[name];
    },
    addTrigger: function(name, trigger) {
      if (this.triggers == null) {
        this.triggers = {};
      }
      return this.triggers[name] = trigger;
    },
    getTrigger: function(name) {
      return this.triggers[name];
    },
    trigger: function(name) {
      var base;
      return typeof (base = this.getTrigger(name)) === "function" ? base() : void 0;
    },
    slugify: function(title) {
      return title.replace(/\W+/, '-').toLowerCase();
    }
  };

}).call(this);
